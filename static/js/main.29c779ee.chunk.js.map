{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","components/Images.js","App.js","index.js"],"names":["ImageCard","image","tags","split","views","toLocaleString","downloads","likes","className","src","webformatURL","alt","user","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","Images","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","console","log","catch","err","length","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA4CeA,EA1CG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEbC,EAAOD,EAAMC,KAAKC,MAAM,KACxBC,EAAQH,EAAMG,MAAMC,iBACpBC,EAAYL,EAAMG,MAAMC,iBACxBE,EAAQN,EAAMM,MAAMF,iBAE1B,OACE,sBAAKG,UAAU,sDAAf,UACE,qBAAKC,IAAKR,EAAMS,aAAcC,IAAKV,EAAMC,KAAMM,UAAU,WACzD,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,yCAAf,sBACYP,EAAMW,QAElB,+BACE,yCAEE,uCAAUR,EAAV,UAEF,4CAEE,uCAAUE,EAAV,UAEF,wCAEE,uCAAUC,EAAV,gBAIN,qBAAKC,UAAU,YAAf,SACGN,EAAKW,KAAI,SAACC,EAAKC,GAAN,OACR,uBAAkBP,UAAU,gGAA5B,cACIM,IADOC,YCSNC,EAxCK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAEVC,mBAAS,IAFC,mBAE3BC,EAF2B,KAErBC,EAFqB,KASlC,OACI,qBAAKZ,UAAU,cAAf,SACI,sBAAKA,UAAU,iDAAf,UAEI,oBAAIA,UAAU,mDAAd,SACI,sBAAMA,UAAU,gFAAhB,6BAGJ,qBAAKA,UAAU,uBAAf,SACI,sBAAMa,SAdL,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAY2BX,UAAU,SAApC,SACI,sBAAKA,UAAU,0CAAf,UACI,uBACIgB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAChClB,UAAU,kHACVmB,KAAK,OACLC,YAAY,yBAEhB,wBACIpB,UAAU,6FACVmB,KAAK,SAFT,iCCcbE,EAtCA,WAAO,IAAD,EAEWX,mBAAS,IAFpB,mBAEVY,EAFU,KAEFC,EAFE,OAGiBb,oBAAS,GAH1B,mBAGVc,EAHU,KAGCC,EAHD,OAIOf,mBAAS,OAJhB,mBAIVgB,EAJU,KAIJC,EAJI,KAkBjB,OAZAC,qBAAU,WACNC,MAAM,gCAAD,OAAiCC,oCAAjC,cAA4EJ,EAA5E,yDACFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,GACbW,QAAQC,IAAIH,EAAKC,SAElBG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAC3B,CAACb,IAIJ,gCACE,cAAC,EAAD,CAAajB,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,MAE3C,sBAAKX,UAAU,gCAAf,WACMwB,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAIxC,UAAU,gDAAd,6BAGrCwB,EAAY,oBAAIxB,UAAU,gDAAd,uBACX,qBAAKA,UAAU,uDAAf,SACKsB,EAAOjB,KAAI,SAAAZ,GAAK,OACb,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMgD,gBClB7BC,MAZf,WACE,OACE,qBAAK1C,UAAU,wDAAf,SACE,qBAAKA,UAAU,wCAAf,SACE,qBAAKA,UAAU,qDAAf,SACE,cAAC,EAAD,W,MCFV2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.29c779ee.chunk.js","sourcesContent":["import React from 'react';\n\nconst ImageCard = ({ image }) => {\n\n  const tags = image.tags.split(',')\n  const views = image.views.toLocaleString()\n  const downloads = image.views.toLocaleString()\n  const likes = image.likes.toLocaleString()\n\n  return (\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg bg-white\">\n      <img src={image.webformatURL} alt={image.tags} className=\"w-full\"/>\n      <div className=\"px-6 py-4 \">\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\n          Photo by {image.user}\n        </div>\n        <ul>\n          <li>\n            Views :  \n            <strong> {views} </strong>\n          </li>\n          <li>\n            Downloads: \n            <strong> {downloads} </strong>\n          </li>\n          <li>\n            Likes:\n            <strong> {likes} </strong>\n          </li>\n        </ul>\n      </div>\n      <div className='px-6 py-4'>\n        {tags.map((tag, index)=>(\n          <span key={index} className='inline-block mb-1 bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2'>\n            #{tag}\n          </span>\n        ))\n\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default ImageCard;","import React,{useState} from 'react'\n\nconst ImageSearch = ({searchText}) => {\n\n    const [text, setText] = useState('')\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        searchText(text)\n    }\n\n    return (\n        <div className='pt-3 pb-0.5'>\n            <div className='max-w-md rounded overflow-hidden my-10 mx-auto'>\n\n                <h1 className='text-center font-black text-4xl md:text-6xl pb-4'>\n                    <span className='text-transparent bg-clip-text bg-gradient-to-br from-yellow-400 to-indigo-400'>Search Images</span>\n                </h1>\n\n                <div className='m-2 bg-white rounded'>\n                    <form onSubmit={onSubmit} className=\"w-full\">\n                        <div className=\"flex items-center border-teal-500 py-2 \">\n                            <input \n                                onChange={e => setText(e.target.value)}\n                                className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" \n                                type=\"text\" \n                                placeholder=\"Search Image Term...\" \n                            />\n                            <button \n                                className=\"flex-shrink-0 bg-red-400 border-red-400 text-white text-sm border-4 py-1 px-2 rounded mr-3\" \n                                type=\"submit\">\n                            Search\n                            </button>      \n                        </div>\n                    </form>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ImageSearch\n","import React,{ useState, useEffect } from 'react'\nimport ImageCard from './ImageCard'\nimport ImageSearch from './ImageSearch'\n\nconst Images = () => {\n\n    const [images, setImages] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [term, setTerm] = useState('cat');\n\n    useEffect(() => {\n        fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true&orientation=horizontal`)\n          .then(res => res.json())\n          .then(data => {\n            setImages(data.hits);\n            setIsLoading(false);\n            console.log(data.hits)\n          })\n          .catch(err => console.log(err));\n      }, [term]);\n\n\n    return (\n      <div>\n        <ImageSearch searchText={(text) => setTerm(text)}/>\n\n        <div className=\"container mx-auto px-3 xs:p-0\">\n            {!isLoading && images.length === 0 && <h1 className='text-5xl text-center mx-auto mt-32 text-white'>No \n            images Found</h1>}\n\n            {isLoading ? <h1 className='text-6xl text-center mx-auto mt-32 text-white'>Loading..</h1> :\n              <div className=\"grid grid-cols-1 xs:grid-cols-2 sm:grid-cols-3 gap-4\">\n                  {images.map(image => (\n                      <ImageCard key={image.id} image={image} />\n                  ))}\n              </div>\n            }\n        </div>\n      </div>\n    )\n}\n\nexport default Images\n","import './App.css';\nimport Images from './components/Images'\n\nfunction App() {\n  return (\n    <div className='bg-gradient-to-br from-yellow-400 to-indigo-500 p-1.5'>\n      <div className='min-h-screen bg-hero-pattern bg-cover'>\n        <div className='bg-black bg-opacity-50 pb-5 min-h-screen font-sans'>\n          <Images />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// code source from https://www.youtube.com/watch?v=FiGmAI5e91M\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}